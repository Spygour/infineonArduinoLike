/**********************************************************************************************************************
 * \file McEthernetIp.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef INFINEONARDUINOLIKE_MCETHERNETIP_H_
#define INFINEONARDUINOLIKE_MCETHERNETIP_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

typedef enum
{
  ETH_TRANSMIT_IDLE,
  SEND_ETHERNET_HEADER,
  SEND_IP_HEADER,
  SEND_TCP_HEADER,
  SEND_PAYLOAD,
  SEND_PACKET,
  ETH_SEND_SUCCESS,
  ETH_SEND_FAIL
}MCETH_IP_TRANSMIT_STATE;

typedef enum
{
  ETH_RECEIVE_IDLE,
  READ_ETHERNET_HEADER,
  READ_IP_HEADER,
  READ_TCP_HEADER,
  ETH_READ_SUCCESS,
  ETH_READ_FAIL
}MCETH_IP_RECEIVE_STATE;


typedef enum
{
  ETH_CREATE_ARP,
  ETH_SEND_ARP,
  ETH_FAIL_SEND_ARP,
  ETH_SUCCESS_SEND_ARP
}MCETHIP_ARP_TRANSMIT_STATE;


typedef enum
{
  ETH_GET_ARP,
  ETH_EVAL_ARP,
  ETH_FAIL_RECEIVE_ARP,
  ETH_SUCCESS_RECEIVE_ARP
}MCETHIP_ARP_RECEIVE_STATE;

typedef struct
{
    uint8*        IpSrcAddress;
    uint8*        IpDstAddress;
}MCETHIP_IP_ADDRESS;

typedef struct
{
    uint16       TcpSrc;
    uint16       TcpDst;
}MCETHIP_TCP_ADDRESS;

typedef struct
{
    MCETHIP_IP_ADDRESS   *SrcDstIpAddress;
    uint8                Version_HeaderLength;
    uint8                DifferecialServices;
    uint16               TotalLength;
    uint16               Identification;
    uint16               FragmentOffset;
    uint8                TimeToLive;
    uint8                Protocol;
    uint16               CheckSum;
}MCETHIP_IPHEADER;

typedef struct
{
   MCETHIP_TCP_ADDRESS*  TcpSrcDst;
   uint32                SeqNumber;
   uint32                Aknowledgment;
   uint8                 DataOffsetAndFlags;
   uint16                WindowSize;
   uint16                CheckSum;
   uint16                UrgentPointer;
}MCETHIP_TCPHEADER;

typedef struct MCETHIP_PAYLOAD
{
    uint16  WriteIndex;
    uint16  ReadIndex;
    uint8*  Buffer;
    uint16  WriteBufferSize;
    uint16  ReadBufferSize;
}MCETHIP_PAYLOAD;
/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern MCETH_IP_TRANSMIT_STATE McEthIp_TransmitState;
extern MCETH_IP_RECEIVE_STATE McEthIp_ReceiveState;
extern MCETHIP_ARP_TRANSMIT_STATE McEthIp_SendARPState;
extern MCETHIP_ARP_RECEIVE_STATE McEthIp_GetARPState ;
extern MCETHIP_PAYLOAD McEthIp_Payload;
/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void McEthIp_Init(uint8* SrcMacAddress);
void McEthIp_SetSrcIpAddress(uint8* IpAddress);
void McEthIp_SetDstIpAddress(uint8* IpAddress);
void McEthIp_GetSrcIpAddress(uint8* ptr);
void McEthIp_GetDstIpAddress(uint8* ptr);
void McEthIp_TcpTransmitPacket(uint8* DataPayload, uint16 PayloadSize);
void McEthIp_TcpReceivePacket(void);
void McEthIp_SendARP(uint8* DstIpAddress);
void McEthIp_GetARP(void);

#endif /* INFINEONARDUINOLIKE_McEthIP_H_ */
