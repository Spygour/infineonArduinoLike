/**********************************************************************************************************************
 * \file Can.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef INFINEONARDUINOLIKE_CAN_H_
#define INFINEONARDUINOLIKE_CAN_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxMultican_Can.h"
#include "IfxMultican.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define SRC_MESSAGE_OBJECT_ID       (IfxMultican_MsgObjId)0     /* Source message object ID                          */
#define DST_MESSAGE_OBJECT_ID       (IfxMultican_MsgObjId)1     /* Destination message object ID                     */
#define RX_INTERRUPT_SRC_ID         IfxMultican_SrcId_1         /* Receive interrupt service request ID              */
#define INVALID_DATA_VALUE          (uint32)0xDEADBEEF          /* Used to invalidate RX message data content        */
#define INVALID_ID_VALUE            (uint32)0xFFFFFFFF          /* Used to invalidate RX message ID value            */
#define ISR_PRIORITY_CAN_RX         15                          /* Define the CAN RX interrupt priority              */

/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/
typedef struct
{
    IfxMultican_Can                 can;                   /* CAN module handle to HW module SFR set                 */
    IfxMultican_Can_Config          canConfig;             /* CAN module configuration structure                     */
    IfxMultican_Can_Node            canSrcNode;            /* CAN source node handle data structure                  */
    IfxMultican_Can_NodeConfig      canNodeConfig;         /* CAN node configuration structure                       */
    IfxMultican_Can_MsgObj          canSrcMsgObj;          /* CAN source message object handle data structure        */
    IfxMultican_Can_MsgObj          canDstMsgObj;          /* CAN destination message object handle data structure   */
    IfxMultican_Can_MsgObjConfig    canMsgObjConfig;       /* CAN message object configuration structure             */
    IfxMultican_Message             txMsg;                 /* Transmitted CAN message structure                      */
    IfxMultican_Message             rxMsg;                 /* Received CAN message structure                         */
} AppMulticanType;

/*********************************************************************************************************************/
/*-----------------------------------------------Function Prototypes-------------------------------------------------*/
/*********************************************************************************************************************/
void canIsrRxHandler(void);
void Can_InitNode0(uint32 Baudrate);
void Can_InitTransmitMsgObj(uint32 CanId, uint32 ExtendedId , uint16 CanDataLength, boolean extended);
void Can_InitReceiveMsgObj(uint32 CanId);
void Can_TransmitMsg(uint32* Msg, uint8 size);

#endif /* INFINEONARDUINOLIKE_CAN_H_ */
